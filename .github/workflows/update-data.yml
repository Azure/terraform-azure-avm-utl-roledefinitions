---
name: update-data

on:
  schedule:
    - cron: '15 4 * * 0'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  id-token: write

env:
  ROLE_DEFINITIONS_CACHE: ./modules/cached-data/role_definitions.tf.json

jobs:
  update:
    environment: update-data
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: 'stable'

      - name: install jd
        run: |
          go install github.com/josephburnett/jd/v2/jd@v2.3.0

      - uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2.3.0
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - name: checkout branch
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout -b update${{ github.run_id }}

      - name: update role definition data (script)
        env:
          AZ_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          ROLE_DEFINITIONS_CACHE: ${{ env.ROLE_DEFINITIONS_CACHE }}
        run: |
          ./scripts/update-data.sh

      - name: deep compare role definition data
        id: compare
        run: |
          if [ ! -f ${{ env.ROLE_DEFINITIONS_CACHE }}.original ]; then
            echo "No original file to compare against"
            exit 0
          fi
          if ! jd -set ${{ env.ROLE_DEFINITIONS_CACHE }}.original ${{ env.ROLE_DEFINITIONS_CACHE }}; then
            echo "${{ env.ROLE_DEFINITIONS_CACHE }} has changed"
            git add ${{ env.ROLE_DEFINITIONS_CACHE }}
          fi
          rm -f ${{ env.ROLE_DEFINITIONS_CACHE }}.original
          if [[ -n $(git status -suno) ]]; then
            echo changed=1 >> "$GITHUB_OUTPUT"
          fi
        working-directory: ${{ github.workspace }}

      - name: stage updated cache
        if: steps.compare.outputs.changed == '1'
        run: |
          git add ${{ env.ROLE_DEFINITIONS_CACHE }} || true

      - name: run pre-commit
        id: precommit
        if: steps.compare.outputs.changed == '1'
        run: |
          ./avm pre-commit
          if [[ -n $(git status -suno) ]]; then
            git add .
          fi
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: commit changes & create PR
        id: pr
        if: steps.compare.outputs.changed == '1'
        run: |
          if [[ -n $(git status -suno) ]]; then
            git commit -m "feat: update data from Azure"
            git push origin update${{ github.run_id }}
            PR_URL=$(gh pr create --title "feat: update data from Azure" --body "Updated from GH run id: ${{ github.run_id }}" --base main --head update${{ github.run_id }})
            echo pull-request-number=$(gh pr view $PR_URL --json number | jq -r '.number') >> "$GITHUB_OUTPUT"
          fi
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: close and comment out of date prs
        if: steps.compare.outputs.changed == '1'
        run: |
          PULL_REQUESTS=$(gh pr list --search "feat: update data from Azure" --json number,headRefName)
          echo "$PULL_REQUESTS" | jq -r '.[] | select(.number != ${{ steps.pr.outputs.pull-request-number }}) | .number' | xargs -I {} gh pr close {} --delete-branch --comment "Supersceeded by #${{ steps.pr.outputs.pull-request-number }}"
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
